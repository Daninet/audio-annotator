{"version":3,"sources":["Wavesurfer.tsx","App.tsx","index.tsx"],"names":["pendingRegion","WaveSurfer","file","useState","label","setLabel","regions","setRegions","selectedRegion","setSelectedRegion","labels","setLabels","wsElement","useRef","timelineElement","spectrogramElement","labelInputElement","ws","recalculateRegions","current","list","ret","Object","keys","regionKey","region","push","start","end","key","console","log","sort","a","b","onEnterRegion","onLeaveRegion","onSeek","time","getCurrentTime","res","values","find","onZoom","useEffect","WaveSurferLib","create","container","waveColor","progressColor","scrollParent","partialRender","plugins","RegionsPlugin","TimelinePlugin","debouncedRecalculate","debounce","on","loadBlob","destroy","handleKey","code","isPlaying","pause","play","wsAny","remove","addRegion","Math","min","max","drag","resize","onAddRegion","listener","e","ctrlKey","shiftKey","altKey","repeat","preventDefault","stopPropagation","document","addEventListener","removeEventListener","id","setTimeout","focus","includes","target","tagName","deltaY","direction","sign","newValue","params","minPxPerSec","zoom","formattedRegions","map","r","JSON","stringify","join","ref","onClick","value","onChange","text","prev","onSetLabel","readOnly","rows","cols","App","setFile","onDrop","useCallback","acceptedFiles","useDropzone","maxFiles","getRootProps","getInputProps","isDragActive","style","height","border","padding","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0bb68925.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport WaveSurferLib from 'wavesurfer.js';\nimport { debounce } from 'lodash';\nimport RegionsPlugin from 'wavesurfer.js/dist/plugin/wavesurfer.regions.min';\nimport TimelinePlugin from 'wavesurfer.js/dist/plugin/wavesurfer.timeline.min';\n// import SpectrogramPlugin from 'wavesurfer.js/dist/plugin/wavesurfer.spectrogram.min';\n\nlet pendingRegion = null;\n\ninterface WaveSurferProps {\n  file: File;\n}\n\nexport const WaveSurfer: React.FC<WaveSurferProps> = ({ file }) => {\n  const [label, setLabel] = useState('');\n  const [regions, setRegions] = useState([]);\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [labels, setLabels] = useState<Record<string, string>>({});\n  const wsElement = useRef<HTMLDivElement>(null);\n  const timelineElement = useRef<HTMLDivElement>(null);\n  const spectrogramElement = useRef<HTMLDivElement>(null);\n  const labelInputElement = useRef<HTMLInputElement>(null);\n  const ws = useRef<WaveSurferLib>();\n\n  const recalculateRegions = () => {\n    if (!ws.current) return setRegions([]);\n    const regions = ws.current.regions.list;\n    const keys = Object.keys(regions);\n    const ret = [];\n    for (const regionKey of keys) {\n      const region = regions[regionKey];\n      ret.push({ start: region.start, end: region.end, key: regionKey });\n      console.log(region);\n    }\n    ret.sort((a, b) => a.start - b.start);\n    return setRegions(ret);\n  };\n\n  const onEnterRegion = (region) => {\n    console.log('onEnterRegion', region);\n    setSelectedRegion(region);\n  }\n\n  const onLeaveRegion = (region) => {\n    console.log('onLeaveRegion', region);\n    setSelectedRegion(null);\n  }\n\n  const onSeek = () => {\n    const time = ws.current.getCurrentTime();\n    console.log('onSeek', time);\n    const regions = Object.values(ws.current.regions.list);\n    const res = regions.find(region => region.start <= time && region.end >= time);\n    if (!res) {\n      setSelectedRegion(null);\n    } else {\n      setSelectedRegion(res);\n    }\n  }\n\n  const onZoom = () => {\n    // spectrograph has to be reinitialized\n    console.log('onZoom');\n  };\n\n  useEffect(() => {\n    ws.current = WaveSurferLib.create({\n      container: wsElement.current as HTMLDivElement,\n      waveColor: 'green',\n      progressColor: 'blue',\n      scrollParent: true,\n      partialRender: true,\n      plugins: [\n        RegionsPlugin.create(),\n        TimelinePlugin.create({ container: timelineElement.current }),\n        // SpectrogramPlugin.create({ container: spectrogramElement.current }),\n      ],\n    });\n\n    const debouncedRecalculate = debounce(recalculateRegions, 25);\n    ws.current.on('region-created', debouncedRecalculate);\n    ws.current.on('region-updated', debouncedRecalculate);\n    ws.current.on('region-updated-end', debouncedRecalculate);\n    ws.current.on('region-removed', debouncedRecalculate);\n    ws.current.on('region-in', onEnterRegion);\n    ws.current.on('region-out', onLeaveRegion);\n    ws.current.on('seek', onSeek);\n    ws.current.on('zoom', onZoom);\n    ws.current.loadBlob(file);\n\n    return () => ws.current.destroy();\n  }, [file]);\n\n  const onAddRegion = () => {\n    const wsAny = ws.current as any;\n    if (pendingRegion) {\n      const start = pendingRegion.start;\n      const end = wsAny.getCurrentTime();\n      pendingRegion.remove();\n      wsAny.addRegion({ start: Math.min(start, end), end: Math.max(start, end), drag: true, resize: true });\n      pendingRegion = null;\n    } else {\n      const region = wsAny.addRegion({ start: wsAny.getCurrentTime(), end: wsAny.getCurrentTime(), drag: true, resize: true });\n      pendingRegion = region;\n    }\n    console.log(wsAny.regions.list);\n  };\n\n  useEffect(() => {\n    const handleKey = (code: string) => {\n      if (code === 'Space') {\n        if (ws.current.isPlaying()) {\n          ws.current.pause();\n        } else {\n          ws.current.play();\n        }\n        return true;\n      }\n      if (code === 'Enter') {\n        onAddRegion();\n      }\n      return false;\n    };\n\n    const listener = (e: KeyboardEvent) => {\n      if (e.ctrlKey || e.shiftKey || e.altKey) return;\n      if (e.repeat) return;\n      if (handleKey(e.code)) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n    document.addEventListener('keydown', listener);\n    return () => document.removeEventListener('keydown', listener);\n  }, []);\n\n  const onSetLabel = (text: string) => {\n    const key = selectedRegion.id;\n    setLabels(prev => ({ ...prev, [key]: text }));\n  };\n\n  useEffect(() => {\n    if (!selectedRegion) return setLabel('');\n    setLabel(labels[selectedRegion.id] ?? '');\n    setTimeout(() => {\n      if (!labelInputElement.current) return;\n      labelInputElement.current.focus();\n    }, 0);\n  }, [labels, selectedRegion]);\n\n  const onDeleteLabel = (region) => {\n    setSelectedRegion(null);\n    region.remove();\n  };\n\n  useEffect(() => {\n    const listener = debounce((e: WheelEvent) => {\n      if (!['WAVE', 'REGION'].includes((e.target as HTMLElement)?.tagName)) return;\n      if (!e.deltaY) return;\n      const direction = Math.sign(e.deltaY) * -1;\n\n      if (!ws.current) return;\n      const newValue = Math.max(20, ws.current.params.minPxPerSec + 50 * direction);\n      if (ws.current.params.minPxPerSec === newValue) return;\n      ws.current.zoom(newValue);\n    }, 100);\n    document.addEventListener('wheel', listener);\n    return () => document.removeEventListener('wheel', listener);\n  }, []);\n\n  const formattedRegions = `[\\n${regions.map(r => `  [${r.start}, ${r.end}, ${JSON.stringify(labels[r.key] ?? '')}]`).join('\\n')}\\n]`;\n\n  return (\n    <>\n      <div ref={wsElement}></div>\n      <div ref={timelineElement}></div>\n      <div ref={spectrogramElement}></div>\n      <br/>\n      {selectedRegion\n        ? <p>\n            Current: ({selectedRegion?.start}, {selectedRegion?.end})&nbsp;\n            <button onClick={() => onDeleteLabel(selectedRegion)}>Delete</button>\n            <br/>\n            Label: <input ref={labelInputElement} value={label} onChange={e => onSetLabel(e.target.value)} readOnly={selectedRegion === null} />\n          </p>\n        : null\n      }\n      \n      <p>Space = play / pause</p>\n      <p>Mouse wheel = zoom</p>\n      <p>Enter = start / end region</p>\n      <textarea rows={20} cols={90} readOnly value={formattedRegions}/>\n    </>\n  );\n}\n","import { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { WaveSurfer } from './Wavesurfer';\n\nfunction App() {\n  const [file, setFile] = useState<File>(null);\n  const onDrop = useCallback(acceptedFiles => {\n    setFile(acceptedFiles[0]);\n    console.log(acceptedFiles[0]);\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, maxFiles: 1 });\n\n  const renderContent = () => {\n    if (!file) {\n      return (\n        <div {...getRootProps()} style={{ height: 300, border: '1px solid gray', padding: 20 }}>\n          <input {...getInputProps()} />\n          {\n            isDragActive ?\n              <p>Drop the files here ...</p> :\n              <p>Drag 'n' drop some audio files here, or click to select files</p>\n          }\n        </div>\n      );\n    }\n    return (\n      <WaveSurfer file={file} />\n    );\n  };\n\n  return (\n    <div>\n      <h2>Simple audio annotator</h2>\n      {renderContent()}\n      <br />\n      <sub>&copy; 2021 Dani Biro</sub>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}